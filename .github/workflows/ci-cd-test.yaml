name: CI/CD Pipeline - Testing

on:
  push:
    branches:
      - seguimiento-2
  pull_request:
    branches:
      - seguimiento-2

jobs:
  test:
    runs-on: ubuntu-latest

    env:
        FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY_TEST }}
        VERCEL_ORG_ID: ${{ secrets.VERCEL_USER_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
      
      - name: Check test coverage
        run: |
          COVERAGE=$(npm run test:coverage --silent | grep -E 'All files\s*\|\s*[0-9]' | awk '{print $4}' | tr -d '%')
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 60" | bc -l) )); then
            echo "Test coverage below 60%"
            exit 1
          else
            echo "Test coverage is sufficient"
          fi

      - name: Install Vercel CLI
        run: npm install --global vercel@latest
  
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN_TEST }}
  
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN_TEST }}
  
      - name: Deploy Project Artifacts to Vercel (Testing)
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN_TEST }}

  docker: 
    runs-on: ubuntu-latest

    env:
      FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY_TEST }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Build Docker image
        run: docker build -t sebas807/dev_ops:test .
          
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          
      - name: Push Docker image to DockerHub
        run: docker push sebas807/dev_ops:test
